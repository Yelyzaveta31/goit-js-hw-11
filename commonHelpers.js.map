{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-function.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["// У файлі render-functions.js створи функції для відображення елементів інтерфейсу.\nexport const createGalleryCard = data => {\n  return data.map(({largeImageURL, webformatURL, tags, likes, views, comments, downloads}) => {\n    return `\n    <li class=\"gallery-item\">\n    <a class=\"\"gallery-link\" href=\"${largeImageURL}\"\n\n      <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"gallery-img\" />\n    </li>\n    <ul class=\"item-info\">\n    <li class=\"item-likes\">\n    <p class=\"title\">Likes</p>\n    <p class=\"value\">${likes}</p>\n    </li>\n    li class=\"item-views\">\n    <p class=\"title\">Views</p>\n    <p class=\"value\">${views}</p>\n     </li>\n     <li class=\"item-comments\">\n    <p class=\"title\">Comments</p>\n    <p class=\"value\">${comments}</p>\n    </li>\n <li class=\"item-downloads\">\n <p class=\"title\">Downloads</p>\n<p class=\"value\">${downloads}</p>\n    </li>\n    </ul>`;\n  })\n};","// У файлі pixabay-api.js зберігай функції для HTTP-запитів.\n\n\nexport const fetchImageByQuery = query => {\n    return fetch(`https://pixabay.com/api/?key=43329687-8aa5e523ea6ec5a66d8459b66&query=${query}&image_type=photo&orientation=horizontal&safesearch=true`)\n.then(response => {\n    if(!response.ok){\n        throw new Error(response.status);\n    }\n    return response.json();\n});\n};\n","// У файлі main.js напиши всю логіку роботи додатка.\n\nimport { createGalleryCard } from \"./js/render-function\";\nimport { fetchImageByQuery } from \"./js/pixabay-api\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport iconError from './img/icon-error.svg';\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst searchForm = document.querySelector('.search-form');\nconst gallery = document.querySelector('.gallery');\n\nconst searchFormSubmit = event => {\n    event.preventDefault();\n\n    const searchQuery = event.target.elements.user_image.value;\n\n\nfetchImageByQuery(searchQuery)\n.then(data => {\n    const imageTemplate = data.map(image => createGalleryCard(image))\n        const stringImage = imageTemplate.join('');\n        \n        gallery.innerHTML(stringImage);\n})\n.catch(error => {\n    console.log(error);\n});\n};\n\nsearchForm.addEventListener('submit', searchFormSubmit);\n\n// const checkEmptyInput = searchQuery => {\n//     if (searchQuery.trim() === '') {\n\n        \n//     }\n// }\n\n\n// iziToast.error({\n// title: 'Error',\n// message: `❌ Rejected promise in ${delay}ms`,\n// backgroundColor: '#ef4040',\n// theme: 'dark',\n// color: 'red',\n// iconUrl: iconError,\n// position: 'topRight',\n// }); "],"names":["createGalleryCard","data","largeImageURL","webformatURL","tags","likes","views","comments","downloads","fetchImageByQuery","query","response","searchForm","gallery","searchFormSubmit","event","searchQuery","stringImage","image","error"],"mappings":"0uBACO,MAAMA,EAAoBC,GACxBA,EAAK,IAAI,CAAC,CAAC,cAAAC,EAAe,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAC7E;AAAA;AAAA,qCAE0BN,CAAa;AAAA;AAAA,kBAEhCC,CAAY,UAAUC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKrBC,CAAK;AAAA;AAAA;AAAA;AAAA,uBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,uBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,mBAIZC,CAAS;AAAA;AAAA,UAGzB,ECxBUC,EAAoBC,GACtB,MAAM,yEAAyEA,CAAK,0DAA0D,EACxJ,KAAKC,GAAY,CACd,GAAG,CAACA,EAAS,GACT,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MACpB,CAAC,ECEKC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAmBC,GAAS,CAC9BA,EAAM,eAAc,EAEpB,MAAMC,EAAcD,EAAM,OAAO,SAAS,WAAW,MAGzDN,EAAkBO,CAAW,EAC5B,KAAKf,GAAQ,CAEN,MAAMgB,EADYhB,EAAK,IAAIiB,GAASlB,EAAkBkB,CAAK,CAAC,EAC1B,KAAK,EAAE,EAEzCL,EAAQ,UAAUI,CAAW,CACrC,CAAC,EACA,MAAME,GAAS,CACZ,QAAQ,IAAIA,CAAK,CACrB,CAAC,CACD,EAEAP,EAAW,iBAAiB,SAAUE,CAAgB"}